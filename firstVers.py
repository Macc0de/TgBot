# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π user'–∞
from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from datetime import datetime

from config.loader import dp
from keyboards.user import main_keyboard

current_date = datetime.now()  # –î–∞—Ç–∞
day = current_date.day
month = current_date.month

def define_numerator():
    if month == 9 and ((1 <= day <= 7) or (29 <= day <= 30)):
        return "–ß–∏—Å–ª–∏—Ç–µ–ª—å"
    elif month == 10 and ((1 <= day <= 5) or (13 <= day <= 19) or (27 <= day <= 31)):
        return "–ß–∏—Å–ª–∏—Ç–µ–ª—å"
    elif month == 11 and ((1 <= day <= 2) or (10 <= day <= 16) or (24 <= day <= 30)):
        return "–ß–∏—Å–ª–∏—Ç–µ–ª—å"
    elif month == 12 and ((8 <= day <= 14) or (22 <= day <= 28)):
        return "–ß–∏—Å–ª–∏—Ç–µ–ª—å"

    elif 9 <= month <= 12 or (month == 12 and day > 28):
        return "–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å"
    else:  # –ö–∞–Ω–∏–∫—É–ª—ã
        return None


router = Router()  # –í–º–µ—Å—Ç–æ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
last_keyboard = {}


@router.message(CommandStart())  # @dp.message(CommandStart())
async def cmd_start(message: Message):
    chat_id = message.chat.id
    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π, –µ—Å–ª–∏ –µ—Å—Ç—å
    if chat_id in last_keyboard:
        try:
            await message.bot.delete_message(chat_id, last_keyboard[chat_id])
        except:
            pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ

    await message.delete()
    new_message = await message.answer(text="–í—ã–±–µ—Ä–∏ ‚§µÔ∏è", reply_markup=main_keyboard.get_buttons())

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    last_keyboard[chat_id] = new_message.message_id


@router.message(Command('info'))  # –§–∏–ª—å—Ç—Ä
async def get_info(message: Message):
    await message.answer("<u><b>–û–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä</b></u>\n\nüî∫ - –ß–∏—Å–ª–∏—Ç–µ–ª—å\nüîπ - –ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å", parse_mode="HTML")
    await message.delete()
'''
@dp.message(F.photo)
async def get_pic(message:Message):
    await message.answer(f"ID: {message.photo[-1].file_id}")
'''

@router.callback_query(F.data == 'auto')
async def auto(callback: CallbackQuery):
    weekdays = {
        0: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
        1: '–í—Ç–æ—Ä–Ω–∏–∫',
        2: '–°—Ä–µ–¥–∞',
        3: '–ß–µ—Ç–≤–µ—Ä–≥',
        4: '–ü—è—Ç–Ω–∏—Ü–∞',
        5: '–°—É–±–±–æ—Ç–∞',
        6: '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
    }
    weekday = current_date.weekday()
    today_weekday = weekdays[weekday]

    await callback.message.answer(f"{day:02d}.{month:02d} - {today_weekday}")

    if define_numerator() is None:
        url = ("https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExaGJxbmNweXhndXlrZHVhZ3Q1bnJqMTE3em5mbW5penlrbXNpb2"
               "1jeiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/cmruux5yjyy2VNdyt3/giphy.gif")
        caption = "–ö–∞–Ω–∏–∫—É–ª—ã... üéâ üåÖ"
        await callback.message.answer_animation(url, caption=caption)
    elif weekday in [0, 6]:
        url = "https://cs4.pikabu.ru/post_img/2014/02/28/9/1393598295_1283013917.gif"
        caption = "–°–µ–≥–æ–¥–Ω—è –æ—Ç–¥—ã—Ö–∞–µ–º üòé"
        await callback.message.answer_animation(url, caption=caption)
    elif today_weekday == "–í—Ç–æ—Ä–Ω–∏–∫":
        text = ("1. (–ü—Ä)–ú–µ—Ç–æ–¥—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: –õ–µ–≥–∫–æ–≤ 301\n"
                "2. (–õ)–ú–µ—Ç–æ–¥—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: –õ–µ–≥–∫–æ–≤ 301")
        await callback.message.answer(text)
    elif today_weekday == "–°—Ä–µ–¥–∞":
        if define_numerator() == "–ß–∏—Å–ª–∏—Ç–µ–ª—å":
            text = ("1.\n"
                    "2. (–õ)–¢–µ–æ—Ä–∏—è –∞–≤—Ç–æ–º–∞—Ç–æ–≤: –ö—É–∑—å–º–∏–Ω 220\n"
                    "3. (–õ)–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ-–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ø—Ä-–µ: –ë–∞—à–∫–∏–Ω 224\n")
            await callback.message.answer(text)
        elif define_numerator() == "–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å":
            text = ("1.\n"
                    "2. (–õ)–¢–µ–æ—Ä–∏—è –∞–≤—Ç–æ–º–∞—Ç–æ–≤: –ö—É–∑—å–º–∏–Ω 220\n"
                    "3. (–õ)–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ-–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ø—Ä-–µ: –ë–∞—à–∫–∏–Ω 224\n"
                    "4. (–õ)–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ-–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ø—Ä-–µ: –ë–∞—à–∫–∏–Ω 224")
            await callback.message.answer(text)
    elif today_weekday == "–ß–µ—Ç–≤–µ—Ä–≥":
        if define_numerator() == "–ß–∏—Å–ª–∏—Ç–µ–ª—å":
            text = ("1.\n"
                    "2. (–ü—Ä)Huawei: –ö–æ—Ä—Å–∞–∫–æ–≤ 201\n"
                    "3.\n"
                    "4. (–õ)–ù–µ–π—Ä–æ–Ω–∫–∏: –°–∞–∂–∏–Ω 204")
            await callback.message.answer(text)
        elif define_numerator() == "–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å":
            text = ("1. (–õ)–ë–ñ–î: –ó–µ—Ä–∫–∞–ª–∏–Ω–∞ 410-411\n"
                    "2. (–ü—Ä)–ë–ñ–î: –ó–µ—Ä–∫–∞–ª–∏–Ω–∞ 410-411\n"
                    "3.\n"
                    "4. (–õ)–ù–µ–π—Ä–æ–Ω–∫–∏: –°–∞–∂–∏–Ω 204")
            await callback.message.answer(text)
    elif today_weekday == "–ü—è—Ç–Ω–∏—Ü–∞":
        if define_numerator() == "–ß–∏—Å–ª–∏—Ç–µ–ª—å":
            text = ("1. (–ü—Ä)–¢–µ–æ—Ä–∏—è –∞–≤—Ç–æ–º–∞—Ç–æ–≤: –ì–ª–∞–¥–∫–æ–≤ 304\n"
                    "2. (–õ)–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: –í–∞—Å–∏–ª—å–µ–≤ 221\n"
                    "3. (–ü—Ä)–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: –í–∞—Å–∏–ª—å–µ–≤ 221\n"
                    "4. –§–∏–∑—Ä–∞")
            await callback.message.answer(text)
        elif define_numerator() == "–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å":
            text = ("1. (–ü—Ä)–¢–µ–æ—Ä–∏—è –∞–≤—Ç–æ–º–∞—Ç–æ–≤: –ì–ª–∞–¥–∫–æ–≤ 304\n"
                    "2. (–õ)Huawei: –ö–æ—Ä—Å–∞–∫–æ–≤ 201(312)\n"
                    "3. (–ü—Ä)–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: –í–∞—Å–∏–ª—å–µ–≤ 221\n"
                    "4. –§–∏–∑—Ä–∞")
            await callback.message.answer(text)
    elif today_weekday == "–°—É–±–±–æ—Ç–∞":
        text = ("1. (–õ)–ë–î: –ì–æ—Ä–±—É–Ω–æ–≤ 216\n"
                "2. (–õ)–ë–î: –ì–æ—Ä–±—É–Ω–æ–≤ 216")
        await callback.message.answer(text)

    await callback.answer()


@router.callback_query(F.data == 'tue')
async def tuesday(callback: CallbackQuery):
    # await callback.message.edit_text('–ü—Ä–∏–≤–µ—Ç', reply_markup=await main_keyboard.inline_tue()) - –í–ê–ñ–ù–û

    text = "<u><b>–í—Ç–æ—Ä–Ω–∏–∫</b></u>\n1. (–ü—Ä)–ú–µ—Ç–æ–¥—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: –õ–µ–≥–∫–æ–≤ 301\n2. (–õ)–ú–µ—Ç–æ–¥—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: –õ–µ–≥–∫–æ–≤ 301"
    await callback.message.answer(text)
    await callback.answer()


@router.callback_query(F.data == 'wed')
async def wednesay(callback: CallbackQuery):
    text = ("<u><b>–°—Ä–µ–¥–∞</b></u>\n1.\n2. (–õ)–¢–µ–æ—Ä–∏—è –∞–≤—Ç–æ–º–∞—Ç–æ–≤: –ö—É–∑—å–º–∏–Ω 220\n"
            "3. (–õ)–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ-–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ø—Ä-–µ: –ë–∞—à–∫–∏–Ω 224\n4. üî∫\n    üîπ(–õ)–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ-–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ø—Ä-–µ: –ë–∞—à–∫–∏–Ω 224")
    await callback.message.answer(text)
    await callback.answer()


@router.callback_query(F.data == 'thu')
async def thursday(callback: CallbackQuery):
    text = ("<u><b>–ß–µ—Ç–≤–µ—Ä–≥</b></u>\n"
            "1. üî∫\n"
            "    üîπ(–õ)–ë–ñ–î: –ó–µ—Ä–∫–∞–ª–∏–Ω–∞ 410-411\n"
            "2. üî∫(–ü—Ä)Huawei: –ö–æ—Ä—Å–∞–∫–æ–≤ 201\n"
            "    üîπ(–ü—Ä)–ë–ñ–î: –ó–µ—Ä–∫–∞–ª–∏–Ω–∞ 410-411\n"
            "3.\n"
            "4. (–õ)–ù–µ–π—Ä–æ–Ω–∫–∏: –°–∞–∂–∏–Ω 204")
    await callback.message.answer(text)
    await callback.answer()


@router.callback_query(F.data == 'fri')
async def friday(callback: CallbackQuery):
    text = ("<u><b>–ü—è—Ç–Ω–∏—Ü–∞</b></u>\n"
            "1. (–ü—Ä)–¢–µ–æ—Ä–∏—è –∞–≤—Ç–æ–º–∞—Ç–æ–≤: –ì–ª–∞–¥–∫–æ–≤ 304\n"
            "2. üî∫(–õ)–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: –í–∞—Å–∏–ª—å–µ–≤ 221\n"
            "    üîπ(–õ)Huawei: –ö–æ—Ä—Å–∞–∫–æ–≤ 201(312)\n"
            "3. (–ü—Ä)–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: –í–∞—Å–∏–ª—å–µ–≤ 221\n"
            "4. –§–∏–∑—Ä–∞")
    await callback.message.answer(text)
    await callback.answer()


@router.callback_query(F.data == 'sat')
async def saturday(callback: CallbackQuery):
    text = ("<u><b>–°—É–±–±–æ—Ç–∞</b></u>\n"
            "1. (–õ)–ë–î: –ì–æ—Ä–±—É–Ω–æ–≤ 216\n"
            "2. (–õ)–ë–î: –ì–æ—Ä–±—É–Ω–æ–≤ 216")
    await callback.message.answer(text)
    await callback.answer()


@router.callback_query(F.data == 'time')
async def time(callback: CallbackQuery):
    text = ("1Ô∏è‚É£  9:00 - 10:35\n"
            "2Ô∏è‚É£ 10:45 - 12:20\n"
            "3Ô∏è‚É£  13:20 - 14:55\n"
            "4Ô∏è‚É£  15:05 - 16:40\n"
            "5Ô∏è‚É£  16:50 - 18:25")
    await callback.message.answer(text)
    await callback.answer()

